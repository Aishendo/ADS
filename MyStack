public class MyStack<T extends Comparable<T>>{
    private MyLinkedList<T> list;
    public MyStack(){list=new MyLinkedList<>();}

    public boolean empty(){
        if(list.size()==0){
            return true;
        } else return false;
    }
    public int size() {
        return list.size();
    }

    public T peek(){
        return list.get(list.size()-1);
    }
    public T push(T newItem){
        list.add(newItem);
        return newItem;
    }
    public T pop(){
        T removingItem = peek();
        list.remove(list.size());
        return removingItem;
    }
}
